import 'package:openapi_parser/utils/annotations.dart';

import 'o_auth_flows.dart';

// Spec page in Notion: https://www.notion.so/reference-material/Security-Scheme-Object-5977e68c2c0c46aeaf927ddeaf785a95

/// Defines a security scheme that can be used by the operations.
///
/// Supported schemes are HTTP authentication, an API key (either as a header,
/// a cookie parameter or as a query parameter), mutual TLS (use of a client certificate),
/// OAuth2's common flows (implicit, password, client credentials and authorization code)
/// as defined in [RFC6749](https://tools.ietf.org/html/rfc6749), and
/// [OpenID Connect Discovery](https://tools.ietf.org/html/draft-ietf-oauth-discovery-06).
///
/// Please note that as of 2020, the implicit flow is about to be deprecated by
/// [OAuth 2.0 Security Best Current Practice](https://tools.ietf.org/html/draft-ietf-oauth-security-topics).
/// Recommended for most use case is Authorization Code Grant flow with PKCE.
///
/// This object MAY be extended with Specification Extensions.
abstract class SecurityScheme {
  /// REQUIRED. The type of the security scheme. Valid values are "apiKey", "http",
  /// "mutualTLS", "oauth2", "openIdConnect".
  ///
  /// Applies to: Any
  String get type;

  /// A description for security scheme.
  /// https://spec.commonmark.org/ MAY be used for rich text representation.
  ///
  /// Applies to: Any
  String get description;

  /// REQUIRED. The name of the header, query or cookie parameter to be used.
  ///
  /// Applies to: apiKey
  String get name;

  /// REQUIRED. The location of the API key. Valid values are "query", "header" or "cookie".
  ///
  /// Applies to: apiKey
  @parserSettings(jsonName: 'in')
  String get inField;

  /// REQUIRED. The name of the HTTP Authorization scheme to be used in the
  /// https://tools.ietf.org/html/rfc7235#section-5.1.  The values used SHOULD be
  /// registered in the https://www.iana.org/assignments/http-authschemes/http-authschemes.xhtml.
  ///
  /// Applies to: http
  String get scheme;

  /// A hint to the client to identify how the bearer token is formatted.
  ///
  /// Bearer tokens are usually generated by an authorization server, so this
  /// information is primarily for documentation purposes.
  ///
  /// Applies to: http ("bearer")
  String get bearerFormat;

  /// REQUIRED. An object containing configuration information for the flow types supported.
  ///
  /// Applies to: oauth2
  OAuthFlows get flows;

  /// REQUIRED. OpenId Connect URL to discover OAuth2 configuration values.
  /// This MUST be in the form of a URL. The OpenID Connect standard requires
  /// the use of TLS.
  ///
  /// Applies to: openIdConnect
  String get openIdConnectUrl;
}
