name: Tests

on:
  pull_request:
    branches:
      - main

jobs:
  setup-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix_json: ${{ steps.read-matrix.outputs.json }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - run: .github/scripts/identify_affected_packages
      - id: read-matrix
        run: |
          content=`jq -c . .github/matrix.json`
          echo "json=$content" >> $GITHUB_OUTPUT
      - name: num-affected
        env:
          packages: ${{ steps.read-matrix.outputs.json }}
        run: |
          echo $packages
          echo $packages | jq '. | length'
  
  run-tests:
    if: needs.setup-matrix.outputs.matrix_json.include[0] != null # only run if matrix is non-empty
    needs: setup-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ${{ fromJson(needs.setup-matrix.outputs.matrix_json) }}
    
    # container: enspyrco/ci-tools:stable
    defaults:
      run:
        working-directory: ./packages/${{ matrix.path }}
    
    steps:
      - uses: actions/checkout@v3

      - run: echo ${{ needs.setup-matrix.outputs.matrix_json }}

      - name: Cache Flutter
        id: cache-flutter
        uses: actions/cache@v3
        with:
          path: ~/_flutter
          key: ${{ runner.os }}-${{ matrix.package }}-${{ hashFiles('.github/flutter_stable_version.txt') }}

      - name: Install Flutter
        if: steps.cache-flutter.outputs.cache-hit != 'true'
        run: |
          cd $HOME
          git clone https://github.com/flutter/flutter.git --depth 1 -b stable _flutter
          cd $GITHUB_WORKSPACE
      
      - name: Put flutter on the path
        run: echo "$HOME/_flutter/bin" >> $GITHUB_PATH

      - run: flutter pub get

      - name: Run build_runner if required
        if: ${{ matrix.source_gen }}
        run: flutter pub run build_runner build
      
      - run: flutter test

  tests-result:
    if: ${{ always() }}
    runs-on: ubuntu-latest
    needs: run-tests
    steps:
      - run: |
          result="${{ needs.run-tests.result }}"
          echo $result
          if [[ $result == "success" || $result == "skipped" ]]; then
            exit 0
          else
            exit 1
          fi