{   
    "import extensions": {
        "prefix": "extensions import",
        "body": [
            "import 'package:${WORKSPACE_NAME}/extensions/extensions.dart';",
        ],
        "description": "extensions import"
    },
    "middleware class": {
        "prefix": "mdlware",
        "body": [
            "import 'package:${WORKSPACE_NAME}/models/app_state/app_state.dart';",
            "import 'package:redux/redux.dart';",
            "",
            "class ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}Middleware extends TypedMiddleware<AppState, ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}> {",
            "\t${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}Middleware(${1/(.*)/${1:/pascalcase}/g}Service ${1}Service) : super((store, action, next) async {",
            "\t\tnext(action);",
            "",
            "\t\tfinal  = await ${1/(.*)/${1:/pascalcase}/g}Service${2};",
            "\t\tstore.dispatch();",
            "\t});",
            "}"
        ],
        "description": "middleware class"
    },
    "reducer class": {
        "prefix": "reducer",
        "body": [
            "import 'package:${WORKSPACE_NAME}/models/app_state/app_state.dart';",
            "import 'package:redux/redux.dart';",
            "",
            "class ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}Reducer extends TypedReducer<AppState, ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}> {",
            "\t${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}Reducer() : super((state, action) => state.rebuild((b) => b..${1} = action.${1}));",
            "}",
        ],
        "description": "reducer class"
    },
    "freezed class": {
        "prefix": "freezed_class",
        "body": [
            "import 'package:freezed_annotation/freezed_annotation.dart';",
            "",
            "part '${TM_FILENAME_BASE}.freezed.dart';",
            "part '${TM_FILENAME_BASE}.g.dart';",
            "",
            "@freezed",
            "abstract class ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g} with _$${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g} {",
            "\tfactory ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}({ ${1} }) = _${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g};",
            "",
            "factory ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}.fromJson(Map<String, dynamic> json) => _$${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}FromJson(json);",
            "}"
        ],
        "description": "freezed class"
    },
    "redux action": {
        "prefix": "bv_act",
        "body": [
            "library ${TM_FILENAME_BASE};",
            "",
            "import 'dart:convert';",
            "",
            "import 'package:built_value/built_value.dart';",
            "import 'package:built_value/serializer.dart';",
            "import 'package:meta/meta.dart';",
            "import 'package:${WORKSPACE_NAME}/actions/redux_action.dart';",
            "import 'package:${WORKSPACE_NAME}/serializers.dart';",
            "",
            "part '${TM_FILENAME_BASE}.g.dart';",
            "",
            "abstract class ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g} extends Object with ReduxAction implements Built<${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}, ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}Builder> {",
            "  ${1} get ${2};",
            "",
            "\t${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}._();",
            "",
            "\tfactory ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}({required ${1} ${2}}) = _$${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}._;",
            "",
            "\tfactory ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}.by([void Function(${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}Builder) updates]) = _$${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g};",
            "",
            "\tObject toJson() =>",
            "\t\tserializers.serializeWith(${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}.serializer, this);",
            "",
            "",
            "\tstatic ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g} fromJson(String jsonString) =>",
            "\t\tserializers.deserializeWith(${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}.serializer, json.decode(jsonString));",
            "",
            "\tstatic Serializer<${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}> get serializer => _$${TM_FILENAME_BASE/([a-z]*)_+([a-z]*)/${1:/lower}${2:/capitalize}/g}Serializer;",
            "",
            "\t@override",
            "\tString toString() => '${TM_FILENAME_BASE/(.*)/${1:/upcase}/g}';",
            "}",
        ],
    },
    "redux no-member action": {
        "prefix": "bv_act_no_members",
        "body": [
            "library ${TM_FILENAME_BASE};",
            "",
            "import 'dart:convert';",
            "",
            "import 'package:built_value/built_value.dart';",
            "import 'package:built_value/serializer.dart';",
            "import 'package:${WORKSPACE_NAME}/actions/redux_action.dart';",
            "import 'package:${WORKSPACE_NAME}/serializers.dart';",
            "",
            "part '${TM_FILENAME_BASE}.g.dart';",
            "",
            "abstract class ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g} extends Object with ReduxAction implements Built<${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}, ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}Builder> {",
            "",
            "\t${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}._();",
            "",
            "\tfactory ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}() = _$${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}._;",
            "",
            "\tObject toJson() =>",
            "\t\tserializers.serializeWith(${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}.serializer, this);",
            "",
            "",
            "\tstatic ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g} fromJson(String jsonString) =>",
            "\t\tserializers.deserializeWith(${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}.serializer, json.decode(jsonString));",
            "",
            "\tstatic Serializer<${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}> get serializer => _$${TM_FILENAME_BASE/([a-z]*)_+([a-z]*)/${1:/lower}${2:/capitalize}/g}Serializer;",
            "",
            "\t@override",
            "\tString toString() => '${TM_FILENAME_BASE/(.*)/${1:/upcase}/g}';",
            "}",
        ],
    }
}